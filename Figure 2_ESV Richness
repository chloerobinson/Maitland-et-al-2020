#Chloe Robinson, Apr 24 2020

library(stringr) # str_split
library(reshape2) # dcast
library(vegan) # rrarefy
library(ggplot2) # ggplot
library(data.table) # setDT
library(gridExtra) # grid.arrange
library(cowplot) # get_legend

#####################################################################
# Look at richness
#####################################################################

#Read in table

a <- read.table("rdp_pooled.csv", header = TRUE, sep = ",",stringsAsFactors = FALSE)
head(a)

# Create dataframes for vegan
# Split up SampleName with pkg 'stringr'
a.1<-data.frame(a, do.call(rbind, str_split(a$SampleName,"_")), stringsAsFactors = FALSE)
head(a.1)
names(a.1)[31:33]<- c("Site","Method","Status")
head(a.1)

# Remove unwanted phyla

a.1<- a[a$Phylum!="Cryptophyta",]
dim(a.1)
a.2<- a.1[a.1$Phylum!="Rhodophyta",]
dim(a.2)
a.3<- a.2[a.2$Phylum!="undef_undef_Eukaryota",]
dim(a.3)

# pivot to make esv matrix (pool across verions, keep only substrate + sites separate)
a.2.esv<-reshape2::dcast(a.3, SampleName ~ rbcL_GlobalESV, value.var = "ESVsize", fun.aggregate = sum)

# move sample to rownames then delete
rownames(a.2.esv) <- a.2.esv$SampleName
a.2.esv$SampleName <- NULL

#remove columns with only zeros
esv.notnull<-a.2.esv[,colSums(a.2.esv) !=0]

#remove rows with only zeros & edit rownames
esv.notnull2<-esv.notnull[rowSums(esv.notnull) !=0,]

# Exclude negative controls before doing rarefaction (if present)
#esv.notnull2.2 <- esv.notnull2[-c(3,6,9),]

#calculate 15th percentile for rrarefy function
esv.percentile<-quantile(rowSums(esv.notnull2), prob=0.15)
esv.percentile
# 15% 
# 122009.8

# set random seed
set.seed(1234)

# Rarefy the dataset down to the 15th percentile
rare.mat <- rrarefy(esv.notnull2, sample=esv.percentile)

# Convert to presence-absence matrix
rare.mat[rare.mat>0] <-1

# Convert to df
df<-data.frame(rare.mat, stringsAsFactors = FALSE)  

# Get total ESVs per sample
df$sums<-rowSums(df)

# Move rownames to first column
df2<-data.frame(df, stringsAsFactors = FALSE)
setDT(df2, keep.rownames = TRUE)[]


# Get separate method and siterep cols
setDT(df2)[, paste0("S", 1:3) := tstrsplit(rn, "_")]
colnames(df2)[colnames(df2)=="S1"] <- "Site"
colnames(df2)[colnames(df2)=="S2"] <- "Method"
colnames(df2)[colnames(df2)=="S3"] <- "Status"

# create factors
df2$Site <- factor(df2$Site, 
                  levels = c("B18", "C12", "C15","L07"),
                  labels = c("Beaver18", "Clair12", "Clair15","Laurel7"))
df2$Method <- factor(df2$Method, 
                    levels = c("K", "M", "L", "R","S"),
                    labels = c("Kick-net", "Macrophyte", "Leaf Litter", "Rock","Sediment"))
df2$Status <- factor(df2$Status, 
                    levels = c("F", "G"),
                    labels = c("Fair", "Good"))

#plot 

b <- ggplot(df2, aes(fill=df2$Method, y=df2$sums, x=df2$Site, label=df2$sums)) +
  ggtitle("") +
  geom_bar(stat="identity") +
  geom_text(position="stack") +
  labs(x="Site", y="ESV Richness") +
  theme_bw() + 
  theme(panel.border = element_blank(), 
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(), 
        axis.line = element_line(colour = "black"),
        legend.title=element_blank(),
        legend.text=element_text(size=12),
        legend.position = "bottom",
        legend.spacing.x = unit(0.5, 'cm'),
        axis.text=element_text(size=12),
        axis.title=element_text(size=12))
b

# based on normalized data
# excluding kingdoms above

#END OF SCRIPT
###############################################################################
